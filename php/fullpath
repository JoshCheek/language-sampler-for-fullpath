#!/usr/bin/env php --no-php-ini
<?php

  function print_help() { ?>
usage: fullpath *[relative-paths] [-c]

  Prints the fullpath of the paths
  If no paths are given as args, it will read them from stdin

  If there is only one path, the trailing newline is omitted

  The -c flag will copy the results into your pasteboard
<?php }

  function select_paths($paths) {
    return array_filter($paths, function($str) {
      return $str != "" && $str[0] != "-";
    });
  }

  function absolute_paths($cwd, $relative_paths) {
    $make_absolute = function($path) use ($cwd) { return "$cwd/$path"; };
    return array_map($make_absolute, $relative_paths);
  }

  function read_lines($stream) {
    $paths = array();
    while($f = fgets($stream)) array_push($paths, rtrim($f, "\n"));
    return $paths;
  }

  function print_paths($stream, $paths) {
    $delimiter = (count($paths) == 1 ? "" : "\n");
    foreach ($paths as $index => $path)
      fwrite($stream, "$path$delimiter");
  }

  function pbcopy($callback) {
    $process = proc_open('pbcopy', array(0 => array("pipe", "r")), $pipes);
    $callback($pipes[0]);
    fclose($pipes[0]);
    proc_close($process);
  }

  function has_flags($args /*, ...$flags */) {
    $flags = array_slice(func_get_args(), 1); // ignore the first arg since we've got it by name
    $found = array_intersect($args, $flags);
    return 0 < count($found);
  }

  $args        = array_slice($argv, 1); // $argv[0] is the filename
  $print_help  = has_flags($args, "-h", "--help");
  $copy_output = has_flags($args, "-c", "--copy");

  if ($print_help) {
    print_help();
  } else {
    $paths = select_paths($args);
    if(count($paths) == 0)
      $paths = select_paths(read_lines(STDIN));
    $paths = absolute_paths(getcwd(), $paths);
    $print_paths = function($stream) use ($paths) {
      print_paths($stream, $paths);
    };
    $print_paths(STDOUT);
    if($copy_output)
      pbcopy($print_paths);
  }
?>
