#!/usr/bin/env python
import sys
import os
from subprocess import Popen, PIPE, STDOUT

def normalize(paths):
    paths = map(lambda x:x.strip(), paths)
    paths = filter(lambda x : x != "", paths)
    return paths

def output(doCopy, paths):
    if len(paths) != 1:
        paths = map(lambda line:os.path.abspath(line)+"\n", paths)
    else:
        paths = [os.path.abspath(paths[0])]
    toPrint = "".join(paths)
    if(doCopy):
        Popen(['pbcopy'], stdin=PIPE).communicate(input=toPrint)
    sys.stdout.write(toPrint)

args   = sys.argv[1:]
doCopy = ('-c' in args or '--copy' in args)
args   = filter(lambda x : x != '-c' and x != '--copy', args)

if '-h' in args or '--help' in args:
    print """usage: fullpath *[relative-paths] [-c]

  Prints the fullpath of the paths
  If no paths are given as args, it will read them from stdin

  If there is only one path, the trailing newline is omitted

  The -c flag will copy the results into your pasteboard"""
    exit(0)

if len(args) == 0:
    output(doCopy, normalize(sys.stdin.readlines()))
else:
    output(doCopy, normalize(args))
