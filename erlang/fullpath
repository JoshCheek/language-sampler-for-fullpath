#!/usr/bin/env escript
%% -*- erlang -*-
%%! -smp enable -sname factorial -mnesia debug verbose
main(Args) ->
  {ok, Cwd} = file:get_cwd(),
  if
    Args == [] ->
      RawLine  = io:get_line(""),
      LineNoNl = re:replace(RawLine, "\n$", "", [global,{return,list}]),
      Paths    = filter_blanks([LineNoNl]),
      print_path(Cwd, Paths, trailing_str(Paths));
    true ->
      Paths = filter_blanks(Args),
      print_paths(Cwd, Paths, trailing_str(Paths))
  end.

filter_blanks([]) -> [];
filter_blanks([Path|Rest]) ->
  if
    "" == Path ->
      filter_blanks(Rest);
    true ->
      [Path | filter_blanks(Rest)]
  end.

print_paths(_, [], _) ->
  init:stop();

print_paths(Cwd, [Path|Rest], Nl) ->
  print_path(Cwd, Path, Nl),
  print_paths(Cwd, Rest, Nl).

print_path(Cwd, Path, TrailingStr) ->
  if
    "" == Path -> noop;
    true -> io:format("~s/~s~s", [Cwd, Path, TrailingStr])
  end.

trailing_str([]) -> "";
trailing_str([_|Rest]) ->
  if
    [] == Rest -> "";
    true       -> "\n"
  end.

% main(_) ->
%   usage().

% usage() ->
%   io:format("usage: factorial integer\n"),
%   halt(1).
