#!/usr/bin/env bash
set -eu
set -o pipefail

# parse args
doHelp=false
doCopy=false
paths=()
for arg in "$@"; do
  if   [[ "$arg" == "-h" || "$arg" == "--help" ]]; then
    doHelp=true
  elif [[ "$arg" == "-c" || "$arg" == "--copy" ]]; then
    doCopy=true
  elif [[ "$arg" != "" ]]; then
    paths+=("$arg")
  fi
done

# Print help and quit
if $doHelp; then
  echo 'usage: fullpath *[relative-paths] [-c]'
  echo
  echo '  Prints the fullpath of the paths'
  echo '  If no paths are given as args, it will read them from stdin'
  echo
  echo '  If there is only one path, the trailing newline is omitted'
  echo
  echo '  The -c flag will copy the results into your pasteboard'
  exit 0
fi

# Read from stdin if no paths in argv
if [[ 0 == "${#paths[@]}" ]]; then
  paths=()
  while true; do
    set +e
    read line
    newline_status=$?
    set -e
    if [[ "$line" != "" ]]; then
      paths+=("$line")
    fi
    if [[ "$newline_status" != 0 ]]; then
      break
    fi
  done
fi

# Print / copy the paths
printPaths () {
  if [[ 1 == "$#" ]]; then
    echo -n "${PWD}/${paths[0]}"
  else
    for path in "$@"; do
      echo "${PWD}/${path}"
    done
  fi
}
printPaths "${paths[@]}" | pbcopy
printPaths "${paths[@]}"
