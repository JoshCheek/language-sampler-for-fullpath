#!/usr/bin/env dart
import "dart:io";

class Fullpath {
  List<String>      args;
  String            cwd; // there is a directory class, but it isn't useful
  Stream<List<int>> instream;
  IOSink            outstream;
  Fullpath(this.args, this.cwd, this.instream, this.outstream);

  call() {
    args = filterBlanks(args);
    if(args.isNotEmpty)
      printPaths(args);
    else
      instream
        .map((bytes) => new String.fromCharCodes(bytes))
        .map(split)
        .toList()
        .then(flatten)
        .then(filterBlanks)
        .then(printPaths);
  }

  filterBlanks(paths) => paths.toList(growable: true)..removeWhere((s) => s.isEmpty);

  printPaths(paths) {
    if(paths.length == 1)
      outstream.write(path(paths[0]));
    else
      paths.forEach((filename) => outstream.write(path(filename)+"\n"));
  }

  // normalizePath
  path(filename) => (cwd + "/" + filename).toString();
  split(str) => str.split(new RegExp(r"\n"));
  flatten(lists) {
    var result = new List();
    lists.forEach((list) => result.addAll(list));
    return result;
  }
}

main(List<String> args) {
  var cwd = Directory.current.path.toString();
  new Fullpath(args, cwd, stdin, stdout)();

  // print("*** Robot Stuffs ***");
  // var r = new Robot();
}
